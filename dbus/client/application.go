// Code generated by dbus-codegen-go DO NOT EDIT.
package client

import (
	"context"
	"errors"
	"fmt"
	"github.com/godbus/dbus/v5"
)

// Interface name constants.
const (
	InterfaceApplication = "org.a11y.atspi.Application"
)

// NewApplication creates and allocates org.a11y.atspi.Application.
func NewApplication(object dbus.BusObject) *Application {
	return &Application{object}
}

// Application implements org.a11y.atspi.Application D-Bus interface.
type Application struct {
	object dbus.BusObject
}

// GetLocale calls org.a11y.atspi.Application.GetLocale method.
func (o *Application) GetLocale(ctx context.Context, lctype uint32) (out0 string, err error) {
	err = o.object.CallWithContext(ctx, InterfaceApplication+".GetLocale", 0, lctype).Store(&out0)
	return
}

// RegisterEventListener calls org.a11y.atspi.Application.RegisterEventListener method.
func (o *Application) RegisterEventListener(ctx context.Context, event string) (err error) {
	err = o.object.CallWithContext(ctx, InterfaceApplication+".RegisterEventListener", 0, event).Store()
	return
}

// DeregisterEventListener calls org.a11y.atspi.Application.DeregisterEventListener method.
func (o *Application) DeregisterEventListener(ctx context.Context, event string) (err error) {
	err = o.object.CallWithContext(ctx, InterfaceApplication+".DeregisterEventListener", 0, event).Store()
	return
}

// GetToolkitName gets org.a11y.atspi.Application.ToolkitName property.
func (o *Application) GetToolkitName(ctx context.Context) (toolkitName string, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceApplication, "ToolkitName").Store(&toolkitName)
	return
}

// GetVersion gets org.a11y.atspi.Application.Version property.
func (o *Application) GetVersion(ctx context.Context) (version string, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceApplication, "Version").Store(&version)
	return
}

// GetAtspiVersion gets org.a11y.atspi.Application.AtspiVersion property.
func (o *Application) GetAtspiVersion(ctx context.Context) (atspiVersion string, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceApplication, "AtspiVersion").Store(&atspiVersion)
	return
}

// GetId gets org.a11y.atspi.Application.Id property.
func (o *Application) GetId(ctx context.Context) (id int32, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceApplication, "Id").Store(&id)
	return
}

// SetId sets org.a11y.atspi.Application.Id property.
func (o *Application) SetId(ctx context.Context, id int32) error {
	return o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Set", 0, InterfaceApplication, "Id", dbus.MakeVariant(id)).Store()
}
