// Code generated by dbus-codegen-go DO NOT EDIT.
package client

import (
	"context"
	"errors"
	"fmt"
	"github.com/godbus/dbus/v5"
)

// Interface name constants.
const (
	InterfaceEditableText = "org.a11y.atspi.EditableText"
)

// NewEditableText creates and allocates org.a11y.atspi.EditableText.
func NewEditableText(object dbus.BusObject) *EditableText {
	return &EditableText{object}
}

// EditableText implements org.a11y.atspi.EditableText D-Bus interface.
type EditableText struct {
	object dbus.BusObject
}

// SetTextContents calls org.a11y.atspi.EditableText.SetTextContents method.
func (o *EditableText) SetTextContents(ctx context.Context, newContents string) (out0 bool, err error) {
	err = o.object.CallWithContext(ctx, InterfaceEditableText+".SetTextContents", 0, newContents).Store(&out0)
	return
}

// InsertText calls org.a11y.atspi.EditableText.InsertText method.
func (o *EditableText) InsertText(ctx context.Context, position int32, text string, length int32) (out0 bool, err error) {
	err = o.object.CallWithContext(ctx, InterfaceEditableText+".InsertText", 0, position, text, length).Store(&out0)
	return
}

// CopyText calls org.a11y.atspi.EditableText.CopyText method.
func (o *EditableText) CopyText(ctx context.Context, startPos int32, endPos int32) (err error) {
	err = o.object.CallWithContext(ctx, InterfaceEditableText+".CopyText", 0, startPos, endPos).Store()
	return
}

// CutText calls org.a11y.atspi.EditableText.CutText method.
func (o *EditableText) CutText(ctx context.Context, startPos int32, endPos int32) (out0 bool, err error) {
	err = o.object.CallWithContext(ctx, InterfaceEditableText+".CutText", 0, startPos, endPos).Store(&out0)
	return
}

// DeleteText calls org.a11y.atspi.EditableText.DeleteText method.
func (o *EditableText) DeleteText(ctx context.Context, startPos int32, endPos int32) (out0 bool, err error) {
	err = o.object.CallWithContext(ctx, InterfaceEditableText+".DeleteText", 0, startPos, endPos).Store(&out0)
	return
}

// PasteText calls org.a11y.atspi.EditableText.PasteText method.
func (o *EditableText) PasteText(ctx context.Context, position int32) (out0 bool, err error) {
	err = o.object.CallWithContext(ctx, InterfaceEditableText+".PasteText", 0, position).Store(&out0)
	return
}
