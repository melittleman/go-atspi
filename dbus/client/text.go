// Code generated by dbus-codegen-go DO NOT EDIT.
package client

import (
	"context"
	"errors"
	"fmt"
	"github.com/godbus/dbus/v5"
)

// Interface name constants.
const (
	InterfaceText = "org.a11y.atspi.Text"
)

// NewText creates and allocates org.a11y.atspi.Text.
func NewText(object dbus.BusObject) *Text {
	return &Text{object}
}

// Text implements org.a11y.atspi.Text D-Bus interface.
type Text struct {
	object dbus.BusObject
}

// GetStringAtOffset calls org.a11y.atspi.Text.GetStringAtOffset method.
func (o *Text) GetStringAtOffset(ctx context.Context, offset int32, granularity uint32) (out0 string, startOffset int32, endOffset int32, err error) {
	err = o.object.CallWithContext(ctx, InterfaceText+".GetStringAtOffset", 0, offset, granularity).Store(&out0, &startOffset, &endOffset)
	return
}

// GetText calls org.a11y.atspi.Text.GetText method.
func (o *Text) GetText(ctx context.Context, startOffset int32, endOffset int32) (out0 string, err error) {
	err = o.object.CallWithContext(ctx, InterfaceText+".GetText", 0, startOffset, endOffset).Store(&out0)
	return
}

// SetCaretOffset calls org.a11y.atspi.Text.SetCaretOffset method.
func (o *Text) SetCaretOffset(ctx context.Context, offset int32) (out0 bool, err error) {
	err = o.object.CallWithContext(ctx, InterfaceText+".SetCaretOffset", 0, offset).Store(&out0)
	return
}

// GetTextBeforeOffset calls org.a11y.atspi.Text.GetTextBeforeOffset method.
func (o *Text) GetTextBeforeOffset(ctx context.Context, offset int32, inType uint32) (out0 string, startOffset int32, endOffset int32, err error) {
	err = o.object.CallWithContext(ctx, InterfaceText+".GetTextBeforeOffset", 0, offset, inType).Store(&out0, &startOffset, &endOffset)
	return
}

// GetTextAtOffset calls org.a11y.atspi.Text.GetTextAtOffset method.
func (o *Text) GetTextAtOffset(ctx context.Context, offset int32, inType uint32) (out0 string, startOffset int32, endOffset int32, err error) {
	err = o.object.CallWithContext(ctx, InterfaceText+".GetTextAtOffset", 0, offset, inType).Store(&out0, &startOffset, &endOffset)
	return
}

// GetTextAfterOffset calls org.a11y.atspi.Text.GetTextAfterOffset method.
func (o *Text) GetTextAfterOffset(ctx context.Context, offset int32, inType uint32) (out0 string, startOffset int32, endOffset int32, err error) {
	err = o.object.CallWithContext(ctx, InterfaceText+".GetTextAfterOffset", 0, offset, inType).Store(&out0, &startOffset, &endOffset)
	return
}

// GetCharacterAtOffset calls org.a11y.atspi.Text.GetCharacterAtOffset method.
func (o *Text) GetCharacterAtOffset(ctx context.Context, offset int32) (out0 int32, err error) {
	err = o.object.CallWithContext(ctx, InterfaceText+".GetCharacterAtOffset", 0, offset).Store(&out0)
	return
}

// GetAttributeValue calls org.a11y.atspi.Text.GetAttributeValue method.
func (o *Text) GetAttributeValue(ctx context.Context, offset int32, attributeName string) (out0 string, err error) {
	err = o.object.CallWithContext(ctx, InterfaceText+".GetAttributeValue", 0, offset, attributeName).Store(&out0)
	return
}

// GetAttributes calls org.a11y.atspi.Text.GetAttributes method.
//
// Annotations:
//   @org.qtproject.QtDBus.QtTypeName.Out0 = QSpiAttributeSet
func (o *Text) GetAttributes(ctx context.Context, offset int32) (out0 map[string]string, startOffset int32, endOffset int32, err error) {
	err = o.object.CallWithContext(ctx, InterfaceText+".GetAttributes", 0, offset).Store(&out0, &startOffset, &endOffset)
	return
}

// GetDefaultAttributes calls org.a11y.atspi.Text.GetDefaultAttributes method.
//
// Annotations:
//   @org.qtproject.QtDBus.QtTypeName.Out0 = QSpiAttributeSet
func (o *Text) GetDefaultAttributes(ctx context.Context) (out0 map[string]string, err error) {
	err = o.object.CallWithContext(ctx, InterfaceText+".GetDefaultAttributes", 0).Store(&out0)
	return
}

// GetCharacterExtents calls org.a11y.atspi.Text.GetCharacterExtents method.
func (o *Text) GetCharacterExtents(ctx context.Context, offset int32, coordType uint32) (x int32, y int32, width int32, height int32, err error) {
	err = o.object.CallWithContext(ctx, InterfaceText+".GetCharacterExtents", 0, offset, coordType).Store(&x, &y, &width, &height)
	return
}

// GetOffsetAtPoint calls org.a11y.atspi.Text.GetOffsetAtPoint method.
func (o *Text) GetOffsetAtPoint(ctx context.Context, x int32, y int32, coordType uint32) (out0 int32, err error) {
	err = o.object.CallWithContext(ctx, InterfaceText+".GetOffsetAtPoint", 0, x, y, coordType).Store(&out0)
	return
}

// GetNSelections calls org.a11y.atspi.Text.GetNSelections method.
func (o *Text) GetNSelections(ctx context.Context) (out0 int32, err error) {
	err = o.object.CallWithContext(ctx, InterfaceText+".GetNSelections", 0).Store(&out0)
	return
}

// GetSelection calls org.a11y.atspi.Text.GetSelection method.
func (o *Text) GetSelection(ctx context.Context, selectionNum int32) (startOffset int32, endOffset int32, err error) {
	err = o.object.CallWithContext(ctx, InterfaceText+".GetSelection", 0, selectionNum).Store(&startOffset, &endOffset)
	return
}

// AddSelection calls org.a11y.atspi.Text.AddSelection method.
func (o *Text) AddSelection(ctx context.Context, startOffset int32, endOffset int32) (out0 bool, err error) {
	err = o.object.CallWithContext(ctx, InterfaceText+".AddSelection", 0, startOffset, endOffset).Store(&out0)
	return
}

// RemoveSelection calls org.a11y.atspi.Text.RemoveSelection method.
func (o *Text) RemoveSelection(ctx context.Context, selectionNum int32) (out0 bool, err error) {
	err = o.object.CallWithContext(ctx, InterfaceText+".RemoveSelection", 0, selectionNum).Store(&out0)
	return
}

// SetSelection calls org.a11y.atspi.Text.SetSelection method.
func (o *Text) SetSelection(ctx context.Context, selectionNum int32, startOffset int32, endOffset int32) (out0 bool, err error) {
	err = o.object.CallWithContext(ctx, InterfaceText+".SetSelection", 0, selectionNum, startOffset, endOffset).Store(&out0)
	return
}

// GetRangeExtents calls org.a11y.atspi.Text.GetRangeExtents method.
func (o *Text) GetRangeExtents(ctx context.Context, startOffset int32, endOffset int32, coordType uint32) (x int32, y int32, width int32, height int32, err error) {
	err = o.object.CallWithContext(ctx, InterfaceText+".GetRangeExtents", 0, startOffset, endOffset, coordType).Store(&x, &y, &width, &height)
	return
}

// GetBoundedRanges calls org.a11y.atspi.Text.GetBoundedRanges method.
//
// Annotations:
//   @org.qtproject.QtDBus.QtTypeName.Out0 = QSpiRangeList
func (o *Text) GetBoundedRanges(ctx context.Context, x int32, y int32, width int32, height int32, coordType uint32, xClipType uint32, yClipType uint32) (out0 []struct {
	V0 int32
	V1 int32
	V2 string
	V3 dbus.Variant
}, err error) {
	err = o.object.CallWithContext(ctx, InterfaceText+".GetBoundedRanges", 0, x, y, width, height, coordType, xClipType, yClipType).Store(&out0)
	return
}

// GetAttributeRun calls org.a11y.atspi.Text.GetAttributeRun method.
//
// Annotations:
//   @org.qtproject.QtDBus.QtTypeName.Out0 = QSpiAttributeSet
func (o *Text) GetAttributeRun(ctx context.Context, offset int32, includeDefaults bool) (out0 map[string]string, startOffset int32, endOffset int32, err error) {
	err = o.object.CallWithContext(ctx, InterfaceText+".GetAttributeRun", 0, offset, includeDefaults).Store(&out0, &startOffset, &endOffset)
	return
}

// GetDefaultAttributeSet calls org.a11y.atspi.Text.GetDefaultAttributeSet method.
//
// Annotations:
//   @org.qtproject.QtDBus.QtTypeName.Out0 = QSpiAttributeSet
func (o *Text) GetDefaultAttributeSet(ctx context.Context) (out0 map[string]string, err error) {
	err = o.object.CallWithContext(ctx, InterfaceText+".GetDefaultAttributeSet", 0).Store(&out0)
	return
}

// ScrollSubstringTo calls org.a11y.atspi.Text.ScrollSubstringTo method.
func (o *Text) ScrollSubstringTo(ctx context.Context, startOffset int32, endOffset int32, inType uint32) (out0 bool, err error) {
	err = o.object.CallWithContext(ctx, InterfaceText+".ScrollSubstringTo", 0, startOffset, endOffset, inType).Store(&out0)
	return
}

// ScrollSubstringToPoint calls org.a11y.atspi.Text.ScrollSubstringToPoint method.
func (o *Text) ScrollSubstringToPoint(ctx context.Context, startOffset int32, endOffset int32, inType uint32, x int32, y int32) (out0 bool, err error) {
	err = o.object.CallWithContext(ctx, InterfaceText+".ScrollSubstringToPoint", 0, startOffset, endOffset, inType, x, y).Store(&out0)
	return
}

// GetCharacterCount gets org.a11y.atspi.Text.CharacterCount property.
func (o *Text) GetCharacterCount(ctx context.Context) (characterCount int32, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceText, "CharacterCount").Store(&characterCount)
	return
}

// GetCaretOffset gets org.a11y.atspi.Text.CaretOffset property.
func (o *Text) GetCaretOffset(ctx context.Context) (caretOffset int32, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceText, "CaretOffset").Store(&caretOffset)
	return
}
