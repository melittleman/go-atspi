// Code generated by dbus-codegen-go DO NOT EDIT.
package client

import (
	"context"
	"errors"
	"fmt"
	"github.com/godbus/dbus/v5"
)

// Interface name constants.
const (
	InterfaceValue = "org.a11y.atspi.Value"
)

// NewValue creates and allocates org.a11y.atspi.Value.
func NewValue(object dbus.BusObject) *Value {
	return &Value{object}
}

// Value implements org.a11y.atspi.Value D-Bus interface.
type Value struct {
	object dbus.BusObject
}

// GetMinimumValue gets org.a11y.atspi.Value.MinimumValue property.
func (o *Value) GetMinimumValue(ctx context.Context) (minimumValue float64, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceValue, "MinimumValue").Store(&minimumValue)
	return
}

// GetMaximumValue gets org.a11y.atspi.Value.MaximumValue property.
func (o *Value) GetMaximumValue(ctx context.Context) (maximumValue float64, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceValue, "MaximumValue").Store(&maximumValue)
	return
}

// GetMinimumIncrement gets org.a11y.atspi.Value.MinimumIncrement property.
func (o *Value) GetMinimumIncrement(ctx context.Context) (minimumIncrement float64, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceValue, "MinimumIncrement").Store(&minimumIncrement)
	return
}

// GetCurrentValue gets org.a11y.atspi.Value.CurrentValue property.
func (o *Value) GetCurrentValue(ctx context.Context) (currentValue float64, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceValue, "CurrentValue").Store(&currentValue)
	return
}

// SetCurrentValue sets org.a11y.atspi.Value.CurrentValue property.
func (o *Value) SetCurrentValue(ctx context.Context, currentValue float64) error {
	return o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Set", 0, InterfaceValue, "CurrentValue", dbus.MakeVariant(currentValue)).Store()
}
