// Code generated by dbus-codegen-go DO NOT EDIT.
package client

import (
	"context"
	"errors"
	"fmt"
	"github.com/godbus/dbus/v5"
)

// Interface name constants.
const (
	InterfaceImage = "org.a11y.atspi.Image"
)

// NewImage creates and allocates org.a11y.atspi.Image.
func NewImage(object dbus.BusObject) *Image {
	return &Image{object}
}

// Image implements org.a11y.atspi.Image D-Bus interface.
type Image struct {
	object dbus.BusObject
}

// GetImageExtents calls org.a11y.atspi.Image.GetImageExtents method.
//
// Annotations:
//   @org.qtproject.QtDBus.QtTypeName.Out0 = QSpiRect
func (o *Image) GetImageExtents(ctx context.Context, coordType uint32) (out0 struct {
	V0 int32
	V1 int32
	V2 int32
	V3 int32
}, err error) {
	err = o.object.CallWithContext(ctx, InterfaceImage+".GetImageExtents", 0, coordType).Store(&out0)
	return
}

// GetImagePosition calls org.a11y.atspi.Image.GetImagePosition method.
func (o *Image) GetImagePosition(ctx context.Context, coordType uint32) (x int32, y int32, err error) {
	err = o.object.CallWithContext(ctx, InterfaceImage+".GetImagePosition", 0, coordType).Store(&x, &y)
	return
}

// GetImageSize calls org.a11y.atspi.Image.GetImageSize method.
func (o *Image) GetImageSize(ctx context.Context) (width int32, height int32, err error) {
	err = o.object.CallWithContext(ctx, InterfaceImage+".GetImageSize", 0).Store(&width, &height)
	return
}

// GetImageDescription gets org.a11y.atspi.Image.ImageDescription property.
func (o *Image) GetImageDescription(ctx context.Context) (imageDescription string, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceImage, "ImageDescription").Store(&imageDescription)
	return
}

// GetImageLocale gets org.a11y.atspi.Image.ImageLocale property.
func (o *Image) GetImageLocale(ctx context.Context) (imageLocale string, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceImage, "ImageLocale").Store(&imageLocale)
	return
}
