// Code generated by dbus-codegen-go DO NOT EDIT.
package client

import (
	"context"
	"errors"
	"fmt"
	"github.com/godbus/dbus/v5"
)

// Interface name constants.
const (
	InterfaceAccessible = "org.a11y.atspi.Accessible"
)

// NewAccessible creates and allocates org.a11y.atspi.Accessible.
func NewAccessible(object dbus.BusObject) *Accessible {
	return &Accessible{object}
}

// Accessible implements org.a11y.atspi.Accessible D-Bus interface.
type Accessible struct {
	object dbus.BusObject
}

// GetChildAtIndex calls org.a11y.atspi.Accessible.GetChildAtIndex method.
//
// Annotations:
//   @org.qtproject.QtDBus.QtTypeName.Out0 = QSpiObjectReference
func (o *Accessible) GetChildAtIndex(ctx context.Context, index int32) (out0 struct {
	V0 string
	V1 dbus.ObjectPath
}, err error) {
	err = o.object.CallWithContext(ctx, InterfaceAccessible+".GetChildAtIndex", 0, index).Store(&out0)
	return
}

// GetChildren calls org.a11y.atspi.Accessible.GetChildren method.
//
// Annotations:
//   @org.qtproject.QtDBus.QtTypeName.Out0 = QSpiObjectReferenceArray
func (o *Accessible) GetChildren(ctx context.Context) (out0 []struct {
	V0 string
	V1 dbus.ObjectPath
}, err error) {
	err = o.object.CallWithContext(ctx, InterfaceAccessible+".GetChildren", 0).Store(&out0)
	return
}

// GetIndexInParent calls org.a11y.atspi.Accessible.GetIndexInParent method.
func (o *Accessible) GetIndexInParent(ctx context.Context) (out0 int32, err error) {
	err = o.object.CallWithContext(ctx, InterfaceAccessible+".GetIndexInParent", 0).Store(&out0)
	return
}

// GetRelationSet calls org.a11y.atspi.Accessible.GetRelationSet method.
//
// Annotations:
//   @org.qtproject.QtDBus.QtTypeName.Out0 = QSpiRelationArray
func (o *Accessible) GetRelationSet(ctx context.Context) (out0 []struct {
	V0 uint32
	V1 []struct {
		V0 string
		V1 dbus.ObjectPath
	}
}, err error) {
	err = o.object.CallWithContext(ctx, InterfaceAccessible+".GetRelationSet", 0).Store(&out0)
	return
}

// GetRole calls org.a11y.atspi.Accessible.GetRole method.
func (o *Accessible) GetRole(ctx context.Context) (out0 uint32, err error) {
	err = o.object.CallWithContext(ctx, InterfaceAccessible+".GetRole", 0).Store(&out0)
	return
}

// GetRoleName calls org.a11y.atspi.Accessible.GetRoleName method.
func (o *Accessible) GetRoleName(ctx context.Context) (out0 string, err error) {
	err = o.object.CallWithContext(ctx, InterfaceAccessible+".GetRoleName", 0).Store(&out0)
	return
}

// GetLocalizedRoleName calls org.a11y.atspi.Accessible.GetLocalizedRoleName method.
func (o *Accessible) GetLocalizedRoleName(ctx context.Context) (out0 string, err error) {
	err = o.object.CallWithContext(ctx, InterfaceAccessible+".GetLocalizedRoleName", 0).Store(&out0)
	return
}

// GetState calls org.a11y.atspi.Accessible.GetState method.
//
// Annotations:
//   @org.qtproject.QtDBus.QtTypeName.Out0 = QSpiIntList
func (o *Accessible) GetState(ctx context.Context) (out0 []uint32, err error) {
	err = o.object.CallWithContext(ctx, InterfaceAccessible+".GetState", 0).Store(&out0)
	return
}

// GetAttributes calls org.a11y.atspi.Accessible.GetAttributes method.
//
// Annotations:
//   @org.qtproject.QtDBus.QtTypeName.Out0 = QSpiAttributeSet
func (o *Accessible) GetAttributes(ctx context.Context) (out0 map[string]string, err error) {
	err = o.object.CallWithContext(ctx, InterfaceAccessible+".GetAttributes", 0).Store(&out0)
	return
}

// GetApplication calls org.a11y.atspi.Accessible.GetApplication method.
//
// Annotations:
//   @org.qtproject.QtDBus.QtTypeName.Out0 = QSpiObjectReference
func (o *Accessible) GetApplication(ctx context.Context) (out0 struct {
	V0 string
	V1 dbus.ObjectPath
}, err error) {
	err = o.object.CallWithContext(ctx, InterfaceAccessible+".GetApplication", 0).Store(&out0)
	return
}

// GetInterfaces calls org.a11y.atspi.Accessible.GetInterfaces method.
func (o *Accessible) GetInterfaces(ctx context.Context) (out0 []string, err error) {
	err = o.object.CallWithContext(ctx, InterfaceAccessible+".GetInterfaces", 0).Store(&out0)
	return
}

// GetName gets org.a11y.atspi.Accessible.Name property.
func (o *Accessible) GetName(ctx context.Context) (name string, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceAccessible, "Name").Store(&name)
	return
}

// GetDescription gets org.a11y.atspi.Accessible.Description property.
func (o *Accessible) GetDescription(ctx context.Context) (description string, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceAccessible, "Description").Store(&description)
	return
}

// GetParent gets org.a11y.atspi.Accessible.Parent property.
//
// Annotations:
//   @org.qtproject.QtDBus.QtTypeName = QSpiObjectReference
func (o *Accessible) GetParent(ctx context.Context) (parent struct {
	V0 string
	V1 dbus.ObjectPath
}, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceAccessible, "Parent").Store(&parent)
	return
}

// GetChildCount gets org.a11y.atspi.Accessible.ChildCount property.
func (o *Accessible) GetChildCount(ctx context.Context) (childCount int32, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceAccessible, "ChildCount").Store(&childCount)
	return
}

// GetLocale gets org.a11y.atspi.Accessible.Locale property.
func (o *Accessible) GetLocale(ctx context.Context) (locale string, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceAccessible, "Locale").Store(&locale)
	return
}

// GetAccessibleId gets org.a11y.atspi.Accessible.AccessibleId property.
func (o *Accessible) GetAccessibleId(ctx context.Context) (accessibleId string, err error) {
	err = o.object.CallWithContext(ctx, "org.freedesktop.DBus.Properties.Get", 0, InterfaceAccessible, "AccessibleId").Store(&accessibleId)
	return
}
