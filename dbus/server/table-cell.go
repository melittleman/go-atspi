// Code generated by dbus-codegen-go DO NOT EDIT.
package server

import (
	"github.com/godbus/dbus/v5"
)

// Interface name constants.
const (
	InterfaceTableCell = "org.a11y.atspi.TableCell"
)

// TableCeller is org.a11y.atspi.TableCell interface.
type TableCeller interface {
	// GetRowColumnSpan is org.a11y.atspi.TableCell.GetRowColumnSpan method.
	GetRowColumnSpan() (out0 bool, row int32, col int32, rowExtents int32, colExtents int32, err *dbus.Error)
}

// ExportTableCell exports the given object that implements org.a11y.atspi.TableCell on the bus.
func ExportTableCell(conn *dbus.Conn, path dbus.ObjectPath, v TableCeller) error {
	return conn.ExportSubtreeMethodTable(map[string]interface{}{
		"GetRowColumnSpan": v.GetRowColumnSpan,
	}, path, InterfaceTableCell)
}

// UnexportTableCell unexports org.a11y.atspi.TableCell interface on the named path.
func UnexportTableCell(conn *dbus.Conn, path dbus.ObjectPath) error {
	return conn.Export(nil, path, InterfaceTableCell)
}

// UnimplementedTableCell can be embedded to have forward compatible server implementations.
type UnimplementedTableCell struct{}

func (*UnimplementedTableCell) iface() string {
	return InterfaceTableCell
}

func (*UnimplementedTableCell) GetRowColumnSpan() (out0 bool, row int32, col int32, rowExtents int32, colExtents int32, err *dbus.Error) {
	err = &dbus.ErrMsgUnknownMethod
	return
}
