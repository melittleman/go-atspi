// Code generated by dbus-codegen-go DO NOT EDIT.
package server

import (
	"github.com/godbus/dbus/v5"
)

// Interface name constants.
const (
	InterfaceDeviceEventListener = "org.a11y.atspi.DeviceEventListener"
)

// DeviceEventListenerer is org.a11y.atspi.DeviceEventListener interface.
type DeviceEventListenerer interface {
	// NotifyEvent is org.a11y.atspi.DeviceEventListener.NotifyEvent method.
	NotifyEvent(event struct {
		V0 uint32
		V1 int32
		V2 uint32
		V3 uint32
		V4 int32
		V5 string
		V6 bool
	}) (out0 bool, err *dbus.Error)
}

// ExportDeviceEventListener exports the given object that implements org.a11y.atspi.DeviceEventListener on the bus.
func ExportDeviceEventListener(conn *dbus.Conn, path dbus.ObjectPath, v DeviceEventListenerer) error {
	return conn.ExportSubtreeMethodTable(map[string]interface{}{
		"NotifyEvent": v.NotifyEvent,
	}, path, InterfaceDeviceEventListener)
}

// UnexportDeviceEventListener unexports org.a11y.atspi.DeviceEventListener interface on the named path.
func UnexportDeviceEventListener(conn *dbus.Conn, path dbus.ObjectPath) error {
	return conn.Export(nil, path, InterfaceDeviceEventListener)
}

// UnimplementedDeviceEventListener can be embedded to have forward compatible server implementations.
type UnimplementedDeviceEventListener struct{}

func (*UnimplementedDeviceEventListener) iface() string {
	return InterfaceDeviceEventListener
}

func (*UnimplementedDeviceEventListener) NotifyEvent(event struct {
	V0 uint32
	V1 int32
	V2 uint32
	V3 uint32
	V4 int32
	V5 string
	V6 bool
}) (out0 bool, err *dbus.Error) {
	err = &dbus.ErrMsgUnknownMethod
	return
}
