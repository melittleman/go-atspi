// Code generated by dbus-codegen-go DO NOT EDIT.
package server

import (
	"github.com/godbus/dbus/v5"
)

// Signal is a common interface for all signals.
type Signal interface {
	Name() string
	Interface() string
	Sender() string

	path() dbus.ObjectPath
	values() []interface{}
}

// Emit sends the given signal to the bus.
func Emit(conn *dbus.Conn, s Signal) error {
	return conn.Emit(s.path(), s.Interface()+"."+s.Name(), s.values()...)
}

// Interface name constants.
const (
	InterfaceRegistry = "org.a11y.atspi.Registry"
)

// Registryer is org.a11y.atspi.Registry interface.
type Registryer interface {
	// RegisterEvent is org.a11y.atspi.Registry.RegisterEvent method.
	RegisterEvent(event string) (err *dbus.Error)
	// DeregisterEvent is org.a11y.atspi.Registry.DeregisterEvent method.
	DeregisterEvent(event string) (err *dbus.Error)
	// GetRegisteredEvents is org.a11y.atspi.Registry.GetRegisteredEvents method.
	GetRegisteredEvents() (events []struct {
		V0 string
		V1 string
	}, err *dbus.Error)
}

// ExportRegistry exports the given object that implements org.a11y.atspi.Registry on the bus.
func ExportRegistry(conn *dbus.Conn, path dbus.ObjectPath, v Registryer) error {
	return conn.ExportSubtreeMethodTable(map[string]interface{}{
		"RegisterEvent":       v.RegisterEvent,
		"DeregisterEvent":     v.DeregisterEvent,
		"GetRegisteredEvents": v.GetRegisteredEvents,
	}, path, InterfaceRegistry)
}

// UnexportRegistry unexports org.a11y.atspi.Registry interface on the named path.
func UnexportRegistry(conn *dbus.Conn, path dbus.ObjectPath) error {
	return conn.Export(nil, path, InterfaceRegistry)
}

// UnimplementedRegistry can be embedded to have forward compatible server implementations.
type UnimplementedRegistry struct{}

func (*UnimplementedRegistry) iface() string {
	return InterfaceRegistry
}

func (*UnimplementedRegistry) RegisterEvent(event string) (err *dbus.Error) {
	err = &dbus.ErrMsgUnknownMethod
	return
}

func (*UnimplementedRegistry) DeregisterEvent(event string) (err *dbus.Error) {
	err = &dbus.ErrMsgUnknownMethod
	return
}

func (*UnimplementedRegistry) GetRegisteredEvents() (events []struct {
	V0 string
	V1 string
}, err *dbus.Error) {
	err = &dbus.ErrMsgUnknownMethod
	return
}
