// Code generated by dbus-codegen-go DO NOT EDIT.
package server

import (
	"github.com/godbus/dbus/v5"
)

// Interface name constants.
const (
	InterfaceEditableText = "org.a11y.atspi.EditableText"
)

// EditableTexter is org.a11y.atspi.EditableText interface.
type EditableTexter interface {
	// SetTextContents is org.a11y.atspi.EditableText.SetTextContents method.
	SetTextContents(newContents string) (out0 bool, err *dbus.Error)
	// InsertText is org.a11y.atspi.EditableText.InsertText method.
	InsertText(position int32, text string, length int32) (out0 bool, err *dbus.Error)
	// CopyText is org.a11y.atspi.EditableText.CopyText method.
	CopyText(startPos int32, endPos int32) (err *dbus.Error)
	// CutText is org.a11y.atspi.EditableText.CutText method.
	CutText(startPos int32, endPos int32) (out0 bool, err *dbus.Error)
	// DeleteText is org.a11y.atspi.EditableText.DeleteText method.
	DeleteText(startPos int32, endPos int32) (out0 bool, err *dbus.Error)
	// PasteText is org.a11y.atspi.EditableText.PasteText method.
	PasteText(position int32) (out0 bool, err *dbus.Error)
}

// ExportEditableText exports the given object that implements org.a11y.atspi.EditableText on the bus.
func ExportEditableText(conn *dbus.Conn, path dbus.ObjectPath, v EditableTexter) error {
	return conn.ExportSubtreeMethodTable(map[string]interface{}{
		"SetTextContents": v.SetTextContents,
		"InsertText":      v.InsertText,
		"CopyText":        v.CopyText,
		"CutText":         v.CutText,
		"DeleteText":      v.DeleteText,
		"PasteText":       v.PasteText,
	}, path, InterfaceEditableText)
}

// UnexportEditableText unexports org.a11y.atspi.EditableText interface on the named path.
func UnexportEditableText(conn *dbus.Conn, path dbus.ObjectPath) error {
	return conn.Export(nil, path, InterfaceEditableText)
}

// UnimplementedEditableText can be embedded to have forward compatible server implementations.
type UnimplementedEditableText struct{}

func (*UnimplementedEditableText) iface() string {
	return InterfaceEditableText
}

func (*UnimplementedEditableText) SetTextContents(newContents string) (out0 bool, err *dbus.Error) {
	err = &dbus.ErrMsgUnknownMethod
	return
}

func (*UnimplementedEditableText) InsertText(position int32, text string, length int32) (out0 bool, err *dbus.Error) {
	err = &dbus.ErrMsgUnknownMethod
	return
}

func (*UnimplementedEditableText) CopyText(startPos int32, endPos int32) (err *dbus.Error) {
	err = &dbus.ErrMsgUnknownMethod
	return
}

func (*UnimplementedEditableText) CutText(startPos int32, endPos int32) (out0 bool, err *dbus.Error) {
	err = &dbus.ErrMsgUnknownMethod
	return
}

func (*UnimplementedEditableText) DeleteText(startPos int32, endPos int32) (out0 bool, err *dbus.Error) {
	err = &dbus.ErrMsgUnknownMethod
	return
}

func (*UnimplementedEditableText) PasteText(position int32) (out0 bool, err *dbus.Error) {
	err = &dbus.ErrMsgUnknownMethod
	return
}
