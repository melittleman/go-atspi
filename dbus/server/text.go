// Code generated by dbus-codegen-go DO NOT EDIT.
package server

import (
	"github.com/godbus/dbus/v5"
)

// Interface name constants.
const (
	InterfaceText = "org.a11y.atspi.Text"
)

// Texter is org.a11y.atspi.Text interface.
type Texter interface {
	// GetStringAtOffset is org.a11y.atspi.Text.GetStringAtOffset method.
	GetStringAtOffset(offset int32, granularity uint32) (out0 string, startOffset int32, endOffset int32, err *dbus.Error)
	// GetText is org.a11y.atspi.Text.GetText method.
	GetText(startOffset int32, endOffset int32) (out0 string, err *dbus.Error)
	// SetCaretOffset is org.a11y.atspi.Text.SetCaretOffset method.
	SetCaretOffset(offset int32) (out0 bool, err *dbus.Error)
	// GetTextBeforeOffset is org.a11y.atspi.Text.GetTextBeforeOffset method.
	GetTextBeforeOffset(offset int32, inType uint32) (out0 string, startOffset int32, endOffset int32, err *dbus.Error)
	// GetTextAtOffset is org.a11y.atspi.Text.GetTextAtOffset method.
	GetTextAtOffset(offset int32, inType uint32) (out0 string, startOffset int32, endOffset int32, err *dbus.Error)
	// GetTextAfterOffset is org.a11y.atspi.Text.GetTextAfterOffset method.
	GetTextAfterOffset(offset int32, inType uint32) (out0 string, startOffset int32, endOffset int32, err *dbus.Error)
	// GetCharacterAtOffset is org.a11y.atspi.Text.GetCharacterAtOffset method.
	GetCharacterAtOffset(offset int32) (out0 int32, err *dbus.Error)
	// GetAttributeValue is org.a11y.atspi.Text.GetAttributeValue method.
	GetAttributeValue(offset int32, attributeName string) (out0 string, err *dbus.Error)
	// GetAttributes is org.a11y.atspi.Text.GetAttributes method.
	GetAttributes(offset int32) (out0 map[string]string, startOffset int32, endOffset int32, err *dbus.Error)
	// GetDefaultAttributes is org.a11y.atspi.Text.GetDefaultAttributes method.
	GetDefaultAttributes() (out0 map[string]string, err *dbus.Error)
	// GetCharacterExtents is org.a11y.atspi.Text.GetCharacterExtents method.
	GetCharacterExtents(offset int32, coordType uint32) (x int32, y int32, width int32, height int32, err *dbus.Error)
	// GetOffsetAtPoint is org.a11y.atspi.Text.GetOffsetAtPoint method.
	GetOffsetAtPoint(x int32, y int32, coordType uint32) (out0 int32, err *dbus.Error)
	// GetNSelections is org.a11y.atspi.Text.GetNSelections method.
	GetNSelections() (out0 int32, err *dbus.Error)
	// GetSelection is org.a11y.atspi.Text.GetSelection method.
	GetSelection(selectionNum int32) (startOffset int32, endOffset int32, err *dbus.Error)
	// AddSelection is org.a11y.atspi.Text.AddSelection method.
	AddSelection(startOffset int32, endOffset int32) (out0 bool, err *dbus.Error)
	// RemoveSelection is org.a11y.atspi.Text.RemoveSelection method.
	RemoveSelection(selectionNum int32) (out0 bool, err *dbus.Error)
	// SetSelection is org.a11y.atspi.Text.SetSelection method.
	SetSelection(selectionNum int32, startOffset int32, endOffset int32) (out0 bool, err *dbus.Error)
	// GetRangeExtents is org.a11y.atspi.Text.GetRangeExtents method.
	GetRangeExtents(startOffset int32, endOffset int32, coordType uint32) (x int32, y int32, width int32, height int32, err *dbus.Error)
	// GetBoundedRanges is org.a11y.atspi.Text.GetBoundedRanges method.
	GetBoundedRanges(x int32, y int32, width int32, height int32, coordType uint32, xClipType uint32, yClipType uint32) (out0 []struct {
		V0 int32
		V1 int32
		V2 string
		V3 dbus.Variant
	}, err *dbus.Error)
	// GetAttributeRun is org.a11y.atspi.Text.GetAttributeRun method.
	GetAttributeRun(offset int32, includeDefaults bool) (out0 map[string]string, startOffset int32, endOffset int32, err *dbus.Error)
	// GetDefaultAttributeSet is org.a11y.atspi.Text.GetDefaultAttributeSet method.
	GetDefaultAttributeSet() (out0 map[string]string, err *dbus.Error)
	// ScrollSubstringTo is org.a11y.atspi.Text.ScrollSubstringTo method.
	ScrollSubstringTo(startOffset int32, endOffset int32, inType uint32) (out0 bool, err *dbus.Error)
	// ScrollSubstringToPoint is org.a11y.atspi.Text.ScrollSubstringToPoint method.
	ScrollSubstringToPoint(startOffset int32, endOffset int32, inType uint32, x int32, y int32) (out0 bool, err *dbus.Error)
}

// ExportText exports the given object that implements org.a11y.atspi.Text on the bus.
func ExportText(conn *dbus.Conn, path dbus.ObjectPath, v Texter) error {
	return conn.ExportSubtreeMethodTable(map[string]interface{}{
		"GetStringAtOffset":      v.GetStringAtOffset,
		"GetText":                v.GetText,
		"SetCaretOffset":         v.SetCaretOffset,
		"GetTextBeforeOffset":    v.GetTextBeforeOffset,
		"GetTextAtOffset":        v.GetTextAtOffset,
		"GetTextAfterOffset":     v.GetTextAfterOffset,
		"GetCharacterAtOffset":   v.GetCharacterAtOffset,
		"GetAttributeValue":      v.GetAttributeValue,
		"GetAttributes":          v.GetAttributes,
		"GetDefaultAttributes":   v.GetDefaultAttributes,
		"GetCharacterExtents":    v.GetCharacterExtents,
		"GetOffsetAtPoint":       v.GetOffsetAtPoint,
		"GetNSelections":         v.GetNSelections,
		"GetSelection":           v.GetSelection,
		"AddSelection":           v.AddSelection,
		"RemoveSelection":        v.RemoveSelection,
		"SetSelection":           v.SetSelection,
		"GetRangeExtents":        v.GetRangeExtents,
		"GetBoundedRanges":       v.GetBoundedRanges,
		"GetAttributeRun":        v.GetAttributeRun,
		"GetDefaultAttributeSet": v.GetDefaultAttributeSet,
		"ScrollSubstringTo":      v.ScrollSubstringTo,
		"ScrollSubstringToPoint": v.ScrollSubstringToPoint,
	}, path, InterfaceText)
}

// UnexportText unexports org.a11y.atspi.Text interface on the named path.
func UnexportText(conn *dbus.Conn, path dbus.ObjectPath) error {
	return conn.Export(nil, path, InterfaceText)
}

// UnimplementedText can be embedded to have forward compatible server implementations.
type UnimplementedText struct{}

func (*UnimplementedText) iface() string {
	return InterfaceText
}

func (*UnimplementedText) GetStringAtOffset(offset int32, granularity uint32) (out0 string, startOffset int32, endOffset int32, err *dbus.Error) {
	err = &dbus.ErrMsgUnknownMethod
	return
}

func (*UnimplementedText) GetText(startOffset int32, endOffset int32) (out0 string, err *dbus.Error) {
	err = &dbus.ErrMsgUnknownMethod
	return
}

func (*UnimplementedText) SetCaretOffset(offset int32) (out0 bool, err *dbus.Error) {
	err = &dbus.ErrMsgUnknownMethod
	return
}

func (*UnimplementedText) GetTextBeforeOffset(offset int32, inType uint32) (out0 string, startOffset int32, endOffset int32, err *dbus.Error) {
	err = &dbus.ErrMsgUnknownMethod
	return
}

func (*UnimplementedText) GetTextAtOffset(offset int32, inType uint32) (out0 string, startOffset int32, endOffset int32, err *dbus.Error) {
	err = &dbus.ErrMsgUnknownMethod
	return
}

func (*UnimplementedText) GetTextAfterOffset(offset int32, inType uint32) (out0 string, startOffset int32, endOffset int32, err *dbus.Error) {
	err = &dbus.ErrMsgUnknownMethod
	return
}

func (*UnimplementedText) GetCharacterAtOffset(offset int32) (out0 int32, err *dbus.Error) {
	err = &dbus.ErrMsgUnknownMethod
	return
}

func (*UnimplementedText) GetAttributeValue(offset int32, attributeName string) (out0 string, err *dbus.Error) {
	err = &dbus.ErrMsgUnknownMethod
	return
}

func (*UnimplementedText) GetAttributes(offset int32) (out0 map[string]string, startOffset int32, endOffset int32, err *dbus.Error) {
	err = &dbus.ErrMsgUnknownMethod
	return
}

func (*UnimplementedText) GetDefaultAttributes() (out0 map[string]string, err *dbus.Error) {
	err = &dbus.ErrMsgUnknownMethod
	return
}

func (*UnimplementedText) GetCharacterExtents(offset int32, coordType uint32) (x int32, y int32, width int32, height int32, err *dbus.Error) {
	err = &dbus.ErrMsgUnknownMethod
	return
}

func (*UnimplementedText) GetOffsetAtPoint(x int32, y int32, coordType uint32) (out0 int32, err *dbus.Error) {
	err = &dbus.ErrMsgUnknownMethod
	return
}

func (*UnimplementedText) GetNSelections() (out0 int32, err *dbus.Error) {
	err = &dbus.ErrMsgUnknownMethod
	return
}

func (*UnimplementedText) GetSelection(selectionNum int32) (startOffset int32, endOffset int32, err *dbus.Error) {
	err = &dbus.ErrMsgUnknownMethod
	return
}

func (*UnimplementedText) AddSelection(startOffset int32, endOffset int32) (out0 bool, err *dbus.Error) {
	err = &dbus.ErrMsgUnknownMethod
	return
}

func (*UnimplementedText) RemoveSelection(selectionNum int32) (out0 bool, err *dbus.Error) {
	err = &dbus.ErrMsgUnknownMethod
	return
}

func (*UnimplementedText) SetSelection(selectionNum int32, startOffset int32, endOffset int32) (out0 bool, err *dbus.Error) {
	err = &dbus.ErrMsgUnknownMethod
	return
}

func (*UnimplementedText) GetRangeExtents(startOffset int32, endOffset int32, coordType uint32) (x int32, y int32, width int32, height int32, err *dbus.Error) {
	err = &dbus.ErrMsgUnknownMethod
	return
}

func (*UnimplementedText) GetBoundedRanges(x int32, y int32, width int32, height int32, coordType uint32, xClipType uint32, yClipType uint32) (out0 []struct {
	V0 int32
	V1 int32
	V2 string
	V3 dbus.Variant
}, err *dbus.Error) {
	err = &dbus.ErrMsgUnknownMethod
	return
}

func (*UnimplementedText) GetAttributeRun(offset int32, includeDefaults bool) (out0 map[string]string, startOffset int32, endOffset int32, err *dbus.Error) {
	err = &dbus.ErrMsgUnknownMethod
	return
}

func (*UnimplementedText) GetDefaultAttributeSet() (out0 map[string]string, err *dbus.Error) {
	err = &dbus.ErrMsgUnknownMethod
	return
}

func (*UnimplementedText) ScrollSubstringTo(startOffset int32, endOffset int32, inType uint32) (out0 bool, err *dbus.Error) {
	err = &dbus.ErrMsgUnknownMethod
	return
}

func (*UnimplementedText) ScrollSubstringToPoint(startOffset int32, endOffset int32, inType uint32, x int32, y int32) (out0 bool, err *dbus.Error) {
	err = &dbus.ErrMsgUnknownMethod
	return
}
