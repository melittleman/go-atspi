// Code generated by dbus-codegen-go DO NOT EDIT.
package server

import (
	"github.com/godbus/dbus/v5"
)

// Interface name constants.
const (
	InterfaceDeviceEventController = "org.a11y.atspi.DeviceEventController"
)

// DeviceEventControllerer is org.a11y.atspi.DeviceEventController interface.
type DeviceEventControllerer interface {
	// RegisterKeystrokeListener is org.a11y.atspi.DeviceEventController.RegisterKeystrokeListener method.
	RegisterKeystrokeListener(listener dbus.ObjectPath, keys []struct {
		V0 int32
		V1 int32
		V2 string
		V3 int32
	}, mask uint32, inType []uint32, mode struct {
		V0 bool
		V1 bool
		V2 bool
	}) (out0 bool, err *dbus.Error)
	// DeregisterKeystrokeListener is org.a11y.atspi.DeviceEventController.DeregisterKeystrokeListener method.
	DeregisterKeystrokeListener(listener dbus.ObjectPath, keys []struct {
		V0 int32
		V1 int32
		V2 string
		V3 int32
	}, mask uint32, inType uint32) (err *dbus.Error)
	// RegisterDeviceEventListener is org.a11y.atspi.DeviceEventController.RegisterDeviceEventListener method.
	RegisterDeviceEventListener(listener dbus.ObjectPath, types uint32) (out0 bool, err *dbus.Error)
	// DeregisterDeviceEventListener is org.a11y.atspi.DeviceEventController.DeregisterDeviceEventListener method.
	DeregisterDeviceEventListener(listener dbus.ObjectPath, types uint32) (err *dbus.Error)
	// GenerateKeyboardEvent is org.a11y.atspi.DeviceEventController.GenerateKeyboardEvent method.
	GenerateKeyboardEvent(keycode int32, keystring string, inType uint32) (err *dbus.Error)
	// GenerateMouseEvent is org.a11y.atspi.DeviceEventController.GenerateMouseEvent method.
	GenerateMouseEvent(x int32, y int32, eventName string) (err *dbus.Error)
	// NotifyListenersSync is org.a11y.atspi.DeviceEventController.NotifyListenersSync method.
	NotifyListenersSync(event struct {
		V0 uint32
		V1 int32
		V2 uint32
		V3 uint32
		V4 int32
		V5 string
		V6 bool
	}) (out0 bool, err *dbus.Error)
	// NotifyListenersAsync is org.a11y.atspi.DeviceEventController.NotifyListenersAsync method.
	NotifyListenersAsync(event struct {
		V0 uint32
		V1 int32
		V2 uint32
		V3 uint32
		V4 int32
		V5 string
		V6 bool
	}) (err *dbus.Error)
}

// ExportDeviceEventController exports the given object that implements org.a11y.atspi.DeviceEventController on the bus.
func ExportDeviceEventController(conn *dbus.Conn, path dbus.ObjectPath, v DeviceEventControllerer) error {
	return conn.ExportSubtreeMethodTable(map[string]interface{}{
		"RegisterKeystrokeListener":     v.RegisterKeystrokeListener,
		"DeregisterKeystrokeListener":   v.DeregisterKeystrokeListener,
		"RegisterDeviceEventListener":   v.RegisterDeviceEventListener,
		"DeregisterDeviceEventListener": v.DeregisterDeviceEventListener,
		"GenerateKeyboardEvent":         v.GenerateKeyboardEvent,
		"GenerateMouseEvent":            v.GenerateMouseEvent,
		"NotifyListenersSync":           v.NotifyListenersSync,
		"NotifyListenersAsync":          v.NotifyListenersAsync,
	}, path, InterfaceDeviceEventController)
}

// UnexportDeviceEventController unexports org.a11y.atspi.DeviceEventController interface on the named path.
func UnexportDeviceEventController(conn *dbus.Conn, path dbus.ObjectPath) error {
	return conn.Export(nil, path, InterfaceDeviceEventController)
}

// UnimplementedDeviceEventController can be embedded to have forward compatible server implementations.
type UnimplementedDeviceEventController struct{}

func (*UnimplementedDeviceEventController) iface() string {
	return InterfaceDeviceEventController
}

func (*UnimplementedDeviceEventController) RegisterKeystrokeListener(listener dbus.ObjectPath, keys []struct {
	V0 int32
	V1 int32
	V2 string
	V3 int32
}, mask uint32, inType []uint32, mode struct {
	V0 bool
	V1 bool
	V2 bool
}) (out0 bool, err *dbus.Error) {
	err = &dbus.ErrMsgUnknownMethod
	return
}

func (*UnimplementedDeviceEventController) DeregisterKeystrokeListener(listener dbus.ObjectPath, keys []struct {
	V0 int32
	V1 int32
	V2 string
	V3 int32
}, mask uint32, inType uint32) (err *dbus.Error) {
	err = &dbus.ErrMsgUnknownMethod
	return
}

func (*UnimplementedDeviceEventController) RegisterDeviceEventListener(listener dbus.ObjectPath, types uint32) (out0 bool, err *dbus.Error) {
	err = &dbus.ErrMsgUnknownMethod
	return
}

func (*UnimplementedDeviceEventController) DeregisterDeviceEventListener(listener dbus.ObjectPath, types uint32) (err *dbus.Error) {
	err = &dbus.ErrMsgUnknownMethod
	return
}

func (*UnimplementedDeviceEventController) GenerateKeyboardEvent(keycode int32, keystring string, inType uint32) (err *dbus.Error) {
	err = &dbus.ErrMsgUnknownMethod
	return
}

func (*UnimplementedDeviceEventController) GenerateMouseEvent(x int32, y int32, eventName string) (err *dbus.Error) {
	err = &dbus.ErrMsgUnknownMethod
	return
}

func (*UnimplementedDeviceEventController) NotifyListenersSync(event struct {
	V0 uint32
	V1 int32
	V2 uint32
	V3 uint32
	V4 int32
	V5 string
	V6 bool
}) (out0 bool, err *dbus.Error) {
	err = &dbus.ErrMsgUnknownMethod
	return
}

func (*UnimplementedDeviceEventController) NotifyListenersAsync(event struct {
	V0 uint32
	V1 int32
	V2 uint32
	V3 uint32
	V4 int32
	V5 string
	V6 bool
}) (err *dbus.Error) {
	err = &dbus.ErrMsgUnknownMethod
	return
}
